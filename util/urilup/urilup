#!/usr/bin/env python

# TODO: finish this util soon.

import sys, os, re
import urllib2, urllib
import datetime
import logging
import argparse 
import collections

# Rudimentary node info structure, used for ssh. Note field similarity to OpenSSH config vars...
NODE = collections.namedtuple( 'node', ['Host', 'IdentityFile', 'User', 'targetdir'])

#-----------------------------------------------------------------------
if __name__ == '__main__':
   urifin, nodelist = [None]*2
   loglevel = logging.INFO
   cmdlprs = argparse.ArgumentParser()
   cmdlprs.add_argument('-l', "--uri", help="A file containing a list of uri", type=str)
   cmdlprs.add_argument('node', nargs='+', type=str, help="A list of target nodes and their "+\
                         "associated local storage directories. [user[:id]@host:/targetdir "+\
                         " e.g. localhost:/tmp  jack@192.168.1.1:/data jack:~/.ssh/id_rsa@10.0.0.5:/tmp ...")
   cmdlprs.add_argument('-v', "--verbose", help="Run in verbose mode", action="store_true")
   args = cmdlprs.parse_args()

   if args.verbose: 
      loglevel = logging.DEBUG

   logging.basicConfig(format='%(asctime)s %(message)s', level=loglevel)

   if args.node: 
      print args.node
   else:
      logging.error('ERROR : no target nodes given, try -h for help.')
      sys.exit(1)
   
   try:
      if args.uri:
         logging.info('Using \"'+args.uri+"\" for uri list")
         urifin = open(args.uri)
      else:
         logging.info("Using stdin for uri list")
         urifin = sys.stdin
   except IOError, e:
      logging.error('ERROR : '+str(e))
      sys.exit(1)

   # pull data from target nodes...
   
#__main__

