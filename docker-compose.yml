version: '2'
services:
  head:
    build: .
    container_name: hsds_head
    restart: ${RESTART_POLICY}
    mem_limit: ${HEAD_RAM}
    environment:
      - AWS_IAM_ROLE=${AWS_IAM_ROLE}
      - TARGET_SN_COUNT=${CORES}
      - TARGET_DN_COUNT=${CORES}
      - HEAD_PORT=${HEAD_PORT}
      - HEAD_HOST=hsds_head
      - NODE_TYPE=head_node
      - AWS_S3_GATEWAY=${AWS_S3_GATEWAY}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_REGION=${AWS_REGION}
      - BUCKET_NAME=${BUCKET_NAME}
      - SYS_BUCKET_NAME=${SYS_BUCKET_NAME}
      - LOG_LEVEL=${LOG_LEVEL}
    ports:
      - ${HEAD_PORT}:${HEAD_PORT}
    logging:
     options:
        max-size: "5m"
        max-file: "5"
  an:
    build: .
    container_name: hsds_async
    restart: ${RESTART_POLICY}
    mem_limit: ${AN_RAM}
    environment:
      - AWS_IAM_ROLE=${AWS_IAM_ROLE}
      - AN_PORT=${AN_PORT}
      - NODE_TYPE=an
      - AWS_S3_GATEWAY=${AWS_S3_GATEWAY}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_REGION=${AWS_REGION}
      - BUCKET_NAME=${BUCKET_NAME}
      - LOG_LEVEL=${LOG_LEVEL}
      - ANONYMOUS_TTL=${ANONYMOUS_TTL}
    depends_on:
      - head
    ports:
      - ${AN_PORT}:${AN_PORT}
    logging:
     options:
        max-size: "5m"
        max-file: "5"
  dn:
    build: .
    restart: ${RESTART_POLICY}
    mem_limit: ${DN_RAM}
    environment:
      - AWS_IAM_ROLE=${AWS_IAM_ROLE}
      - DN_PORT=${DN_PORT}
      - DN_HOST=${PUBLIC_DNS}
      - NODE_TYPE=dn
      - AWS_S3_GATEWAY=${AWS_S3_GATEWAY}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_REGION=${AWS_REGION}
      - BUCKET_NAME=${BUCKET_NAME}
      - LOG_LEVEL=${LOG_LEVEL}
      - CHUNK_MEM_CACHE_SIZE=${CHUNK_MEM_CACHE_SIZE}
      - MAX_CHUNK_SIZE=${MAX_CHUNK_SIZE}
    depends_on:
      - an
    ports:
      - ${DN_PORT}
    logging:
     options:
        max-size: "5m"
        max-file: "5"
  sn:
    build: .
    restart: ${RESTART_POLICY}
    mem_limit: ${SN_RAM}
    environment:
      - AWS_IAM_ROLE=${AWS_IAM_ROLE}
      - SN_PORT=${SN_PORT}
      - NODE_TYPE=sn
      - AWS_S3_GATEWAY=${AWS_S3_GATEWAY}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_DYNAMODB_GATEWAY=${AWS_DYNAMODB_GATEWAY}
      - AWS_REGION=${AWS_REGION}
      - BUCKET_NAME=${BUCKET_NAME}
      - LOG_LEVEL=${LOG_LEVEL}
      - SERVER_NAME=${SERVER_NAME}
      - CHUNK_MEM_CACHE_SIZE=${CHUNK_MEM_CACHE_SIZE}
      - MAX_CHUNK_SIZE=${MAX_CHUNK_SIZE}
      - AWS_DYNAMODB_USERS_TABLE=${AWS_DYNAMODB_USERS_TABLE}
      - VIRTUAL_HOST=${PUBLIC_DNS}
      - VIRTUAL_PORT=${SN_PORT}
      - HSDS_ENDPOINT=${PUBLIC_DNS}
      - SN_HOST=${PUBLIC_DNS}
      - PASSWORD_SALT=${PASSWORD_SALT}
      - GREETING=${GREETING}
      - ABOUT=${ABOUT}
    depends_on:
      - an
    ports:
      - ${SN_PORT}
    logging:
     options:
        max-size: "5k"
        max-file: "5"
  proxy:
    image: nginx
    restart: always
    container_name: hsds_proxy
    volumes:
      - /etc/nginx/certs
      - /etc/nginx/conf.d
      - /etc/nginx/vhost.d
      - /usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro
    ports:
      - "80:80"
    logging:
     options:
        max-size: "5m"
        max-file: "5"
  dockergen:
    image: jwilder/docker-gen
    restart: always
    container_name: hsds_gen
    command: -notify-sighup hsds_proxy -watch /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
    volumes_from:
      - proxy
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl
  logs:
    image: mdsol/logspout
    restart: always
    command: cloudwatch://auto
    container_name: logspout
    hostname: hsds_${PUBLIC_DNS}
    volumes:
    - /var/run/docker.sock:/tmp/docker.sock:ro
    logging:
     options:
        max-size: "5m"
        max-file: "5"
